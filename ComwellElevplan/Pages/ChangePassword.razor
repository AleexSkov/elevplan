@page "/changepassword"
@layout MinimalLayout
@using Core.Models

@inject HttpClient Http
@inject NavigationManager Nav





@inject NavigationManager Navigation

<div class="change-password-bg">
    <div class="change-password-box">
        <h3>Skift adgangskode</h3>

        <EditForm Model="model" OnValidSubmit="HandlePasswordChange">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>E-mail</label>
                <InputText @bind-Value="model.Email" class="form-control" />
            </div>

            <div class="form-group">
                <label>Nuv√¶rende kode</label>
                <InputText @bind-Value="model.CurrentPassword" class="form-control" type="password" />
            </div>

            <div class="form-group">
                <label>Ny kode</label>
                <InputText @bind-Value="model.NewPassword" class="form-control" type="password" />
            </div>

            <button type="submit" class="btn btn-primary">Opdater kode</button>

            @if (!string.IsNullOrEmpty(message))
            {
                <p class="alert-info">@message</p>
            }
        </EditForm>
    </div>
</div>

@code {
    private ChangePasswordModel model = new();
    private string? message;

    private async Task HandlePasswordChange()
    {
        var response = await Http.PostAsJsonAsync("api/auth/change-password", model);
        if (response.IsSuccessStatusCode)
        {
            message = "Adgangskoden er opdateret!";
            Navigation.NavigateTo("/dashboard");
            model = new(); // Nulstil formular
        }
        else
        {
            message = "Fejl: " + await response.Content.ReadAsStringAsync();
        }
    }
}


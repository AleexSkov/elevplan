@page "/changepassword"
<!--@using Core.Models
@using System.ComponentModel.DataAnnotations
@using Core


@inject NavigationManager Navigation


<div class="change-password-bg">
    <div class="change-password-box">
        <EditForm Model="ChangePassword" OnValidSubmit="HandleChangePassword" class="change-password-box">
        <h2>Skift adgangskode</h2>
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div class="form-group">
            <label for="email">E-mail</label>
            <InputText id="email" @bind-Value="ChangePassword.Email" class="form-control"/>
            <ValidationMessage For="@(() => ChangePassword.Email)"/>
        </div> 

        <div class="form-group">
            <label for="currentPassword">Nuværende kodeord</label>
            <InputText id="currentPassword" type="password" @bind-Value="ChangePassword.CurrentPassword" class="form-control"/>
            <ValidationMessage For="@(() => ChangePassword.CurrentPassword)"/>
        </div>

        <div class="form-group">
            <label for="newPassword">Ny kodeord</label>
            <InputText id="newPassword" type="password" @bind-Value="ChangePassword.NewPassword" class="form-control"/>
            <ValidationMessage For="@(() => ChangePassword.NewPassword)"/>
        </div>
   
    
        <button type="submit">Skift kodeord</button>
    
    
    </EditForm>
</div>
</div>

  

@code {
    private ChangePassword changePassword = new();

    private async Task HandleChangePassword()
    {
        var success = await LoginService.ChangePassword(changePassword.Email, changePassword.NewPassword, changePassword.CurrentPassword);
        if (success)
        {
            ToastService.ShowSuccess("Kodeord ændret! Log ind igen med din nye kode.");
            Navigation.NavigateTo("/login", forceLoad: true);
        }
        else
        {
            ToastService.ShowError("Kunne ikke ændre kodeord. Tjek om informationerne er korrekte.");
        }
    }

}
-->
@page "/changepassword"                    
<!-- Side til at skifte adgangskode -->
@layout MinimalLayout                      
<!-- Bruger simpelt layout uden sidebar -->

@using Core.Models                         <!-- Indeholder ChangePasswordModel -->

@inject HttpClient Http                   
 <!-- Bruges til at kalde API'et -->
@inject NavigationManager Navigation              
<!-- Bruges til navigation efter succes -->

<!-- Sideindhold -->
<div class="change-password-bg">
    <div class="change-password-box">
        <h3>Skift adgangskode</h3>

        <!-- Formular til at opdatere adgangskode -->
        <EditForm Model="model" OnValidSubmit="HandlePasswordChange">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>E-mail</label>
                <InputText @bind-Value="model.Email" class="form-control" />
            </div>

            <div class="form-group">
                <label>Nuværende kode</label>
                <InputText @bind-Value="model.CurrentPassword" class="form-control" type="password" />
            </div>

            <div class="form-group">
                <label>Ny kode</label>
                <InputText @bind-Value="model.NewPassword" class="form-control" type="password" />
            </div>

            <button type="submit" class="btn btn-primary">Opdater kode</button>

            <!-- Feedbackbesked vises efter forsøg -->
            @if (!string.IsNullOrEmpty(message))
            {
                <p class="alert-info">@message</p>
            }
        </EditForm>
    </div>
</div>

@code {
    /// <summary>
    /// Model der indeholder email, nuværende og ny adgangskode.
    /// </summary>
    private ChangePasswordModel model = new();

    /// <summary>
    /// Besked der vises efter forsøg på adgangskodeskift.
    /// </summary>
    private string? message;

    /// <summary>
    /// Håndterer opdatering af adgangskode ved at sende model til API.
    /// Viser feedback til bruger og redirecter ved succes.
    /// </summary>
    private async Task HandlePasswordChange()
    {
        var response = await Http.PostAsJsonAsync("api/auth/change-password", model);
        if (response.IsSuccessStatusCode)
        {
            message = "Adgangskoden er opdateret!";
            Navigation.NavigateTo("/dashboard");     // Naviger tilbage til dashboard
            model = new();                           // Nulstil formular efter succes
        }
        else
        {
            message = "Fejl: " + await response.Content.ReadAsStringAsync(); // Vis fejl
        }
    }
}

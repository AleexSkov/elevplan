@page "/elevplaner"
@inject HttpClient Http
@using Core.Models

<h3>Elevplaner</h3>

@if (elevplaner == null)
{
    <p>Indlæser elevplaner...</p>
}
else if (!elevplaner.Any())
{
    <p>Ingen elevplaner fundet.</p>
}
else
{
    @foreach (var plan in elevplaner)
    {
        <div class="card mb-4 p-3">
            <h4>@plan.elev_navn (@plan.elev_id)</h4>
            <p><strong>Skole:</strong> @plan.skole | <strong>Aftaleform:</strong> @plan.aftaleform</p>
            <p><strong>Oprettet:</strong> @plan.oprettet_dato.ToShortDateString() | <strong>Opdateret:</strong> @plan.opdateret_dato.ToShortDateString()</p>

            @if (plan.praktikperioder != null && plan.praktikperioder.Any())
            {
                <h5 class="mt-3">Praktikperioder</h5>
                @foreach (var periode in plan.praktikperioder)
                {
                    <div class="ms-3 mb-3 p-2 border-start border-4">
                        <p><strong>Periode @periode.periode_nummer</strong> – @periode.varighed_uger uger</p>
                        <p><strong>Skoleperiode:</strong>
                            @periode.skoleperiode?.start_dato?.ToShortDateString()
                            –
                            @periode.skoleperiode?.slut_dato?.ToShortDateString()
                            (@periode.skoleperiode?.varighed_uger uger)
                        </p>

                        @if (periode.opgaver != null && periode.opgaver.Any())
                        {
                            <h6>Opgaver</h6>
                            <ul>
                                @foreach (var opgave in periode.opgaver)
                                {
                                    <li>
                                        <strong>@opgave.kategori:</strong> @opgave.beskrivelse<br />
                                        <em>@opgave.tidslinje</em><br />
                                        <span>Ansvarlig: @opgave.ansvarlig | Initiator: @opgave.initiator</span><br />
                                        <span>Status: @(opgave.gennemført ? "✔️ Gennemført" : "❌ Ikke gennemført")</span>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p><em>Ingen opgaver registreret.</em></p>
                        }
                    </div>
                }
            }
            else
            {
                <p><em>Ingen praktikperioder registreret.</em></p>
            }
        </div>
    }
}

@code {
    private List<Elevplan>? elevplaner;

    protected override async Task OnInitializedAsync()
    {
        elevplaner = await Http.GetFromJsonAsync<List<Elevplan>>("http://localhost:5102/api/elevplan");
    }
}

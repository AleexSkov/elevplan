@page "/login"
@inject HttpClient Http
@inject NavigationManager Nav
@using Core.Models

<h3>Login</h3>

@if (!string.IsNullOrEmpty(message))
{
    <p class="alert alert-danger">@message</p>
}

<EditForm Model="loginData" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email</label>
        <InputText @bind-Value="loginData.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label>Password</label>
        <InputText @bind-Value="loginData.Password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Log ind</button>
</EditForm>

@code {
    private LoginRequest loginData = new();
    private string? message;

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("http://localhost:5102/api/auth/login", loginData);
        if (response.IsSuccessStatusCode)
        {
            message = null;
            Nav.NavigateTo("/"); // fx /dashboard eller /
        }
        else
        {
            message = "Login mislykkedes: " + await response.Content.ReadAsStringAsync();
        }
    }
}
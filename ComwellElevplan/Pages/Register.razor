@page "/opretuser"
@using Core.Models
@inject HttpClient Http
@inject NavigationManager Nav

<div class="form-wrapper">
    <div class="form-container">
        <h3>Opret bruger</h3>

        <EditForm Model="newUser" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label>Email</label>
                <InputText @bind-Value="newUser.Email" class="form-control" />
            </div>

            <div class="mb-3">
                <label>Navn</label>
                <InputText @bind-Value="newUser.Name" class="form-control" />
            </div>

            <div class="mb-3">
                <label>Rolle</label>
                <InputText @bind-Value="newUser.Role" class="form-control" />
            </div>

            <div class="form-buttons">
                <button class="btn btn-secondary" @onclick="Tilbage">Annullér</button>
                <button type="submit" class="btn btn-primary">Opret bruger</button>
            </div>
        </EditForm>

        @if (!string.IsNullOrEmpty(generatedPassword))
        {
            <div class="generated-password mt-4">
                <h5>Genereret adgangskode:</h5>
                <InputText @bind-Value="generatedPassword" class="form-control" readonly />
                <p class="text-muted mt-2">
                    Kopiér denne kode og send den manuelt til den nye bruger.
                </p>
            </div>
        }

        @if (!string.IsNullOrEmpty(message))
        {
            <p class="alert-info mt-3">@message</p>
        }
    </div>
</div>

@code {
    private AppUser newUser = new();
    private string? generatedPassword;
    private string? message;

    private async Task HandleRegister()
    {
        generatedPassword = GenerateRandomPassword();
        newUser.PasswordHash = generatedPassword;

        var response = await Http.PostAsJsonAsync("api/auth/register", newUser);

        if (response.IsSuccessStatusCode)
        {
            message = "Bruger oprettet!";
            newUser = new();
        }
        else
        {
            message = "Fejl: " + await response.Content.ReadAsStringAsync();
            generatedPassword = null;
        }
    }

    private void Tilbage() => Nav.NavigateTo("/dashboard");

    private string GenerateRandomPassword()
    {
        const string chars = "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz23456789";
        var random = new Random();
        return new string(Enumerable.Range(0, 10).Select(_ => chars[random.Next(chars.Length)]).ToArray());
    }
}

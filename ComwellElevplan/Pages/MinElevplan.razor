@page "/min-elevplan"

@using Core.Models
@using System.Net.Http.Json
@inject HttpClient Http
@inject IJSRuntime JS

<h3>Min Elevplan</h3>

@if (plan is null)
{
    <p>Indlæser din elevplan…</p>
}
else
{
    <div class="mb-3">
        <h4>@plan.ElevNavn</h4>
        <p><strong>Skole:</strong> @plan.Skole</p>
        <p><strong>Aftaleform:</strong> @plan.Aftaleform</p>
    </div>

    <div class="mb-3">
        <label>Vælg periode:</label>
        <select @onchange="OnPeriodChanged" class="form-select">
            @foreach (var p in plan.Praktikperioder)
            {
                <option value="@p.PeriodeNummer">
                    Periode @p.PeriodeNummer (@p.VarighedUger uger)
                </option>
            }
        </select>
    </div>

    @if (selectedPeriod != null)
    {
        <h5>Delmål for Periode @selectedPeriod.PeriodeNummer</h5>
        <ul class="list-group">
            @foreach (var delmaal in selectedPeriod.Opgaver)
            {
                <li class="list-group-item d-flex align-items-center">
                    <input type="checkbox" class="form-check-input me-2" checked="@delmaal.Gennemført" disabled />
                    <div class="flex-grow-1">
                        <strong>@delmaal.Kategori:</strong> @delmaal.Beskrivelse<br />
                        <small>Ansvarlig: @delmaal.Ansvarlig, Initiator: @delmaal.Initiator, Deadline: @delmaal.Tidslinje</small>
                    </div>
                </li>
            }
        </ul>
    }
}

@code {
    private Elevplan? plan;
    private Praktikperiode? selectedPeriod;

    protected override async Task OnInitializedAsync()
    {
        var elevId = await JS.InvokeAsync<string>("localStorage.getItem", "elevId");
        if (!string.IsNullOrEmpty(elevId))
        {
            plan = await Http.GetFromJsonAsync<Elevplan>($"/api/elevplaner/{elevId}");
            selectedPeriod = plan?.Praktikperioder.FirstOrDefault();
        }
    }

    private void OnPeriodChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out var num))
        {
            selectedPeriod = plan?.Praktikperioder.FirstOrDefault(p => p.PeriodeNummer == num);
        }
    }
}
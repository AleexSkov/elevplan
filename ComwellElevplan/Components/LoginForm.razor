
@using System.Net.Http.Json
@using Core.Models
@inject HttpClient Http
@inject NavigationManager Nav
@inject IJSRuntime JS

<h3>Log ind</h3>

<EditForm Model="credentials" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email</label>
        <InputText @bind-Value="credentials.Email" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Adgangskode</label>
        <InputText @bind-Value="credentials.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Log ind</button>
</EditForm>

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger mt-3">@error</div>
}

@code {
    private LoginRequest credentials = new();
    private string? error;

    private async Task HandleLogin()
    {
        var resp = await Http.PostAsJsonAsync("api/auth/login", credentials);
        if (!resp.IsSuccessStatusCode)
        {
            error = await resp.Content.ReadAsStringAsync();
            return;
        }

        var result = await resp.Content.ReadFromJsonAsync<LoginResponse>();
        if (result?.ElevId != null)
        {
            // Gem ElevId i localStorage
            await JS.InvokeVoidAsync("localStorage.setItem", "elevId", result.ElevId);
        }

        Nav.NavigateTo("/min-elevplan");
    }

    public class LoginResponse
    {
        public string Email              { get; set; } = default!;
        public string Name               { get; set; } = default!;
        public string Role               { get; set; } = default!;
        public bool   MustChangePassword { get; set; }
        public string? ElevId            { get; set; }
    }
}